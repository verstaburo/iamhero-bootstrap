/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets/scripts/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 34);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var throttle = __webpack_require__(1);
var debounce = __webpack_require__(36);

module.exports = {
	throttle: throttle,
	debounce: debounce
};


/***/ }),
/* 1 */
/***/ (function(module, exports) {

/* eslint-disable no-undefined,no-param-reassign,no-shadow */

/**
 * Throttle execution of a function. Especially useful for rate limiting
 * execution of handlers on events like resize and scroll.
 *
 * @param  {Number}    delay          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
 * @param  {Boolean}   noTrailing     Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the
 *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time
 *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,
 *                                    the internal counter is reset)
 * @param  {Function}  callback       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
 *                                    to `callback` when the throttled-function is executed.
 * @param  {Boolean}   debounceMode   If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),
 *                                    schedule `callback` to execute after `delay` ms.
 *
 * @return {Function}  A new, throttled, function.
 */
module.exports = function ( delay, noTrailing, callback, debounceMode ) {

	// After wrapper has stopped being called, this timeout ensures that
	// `callback` is executed at the proper times in `throttle` and `end`
	// debounce modes.
	var timeoutID;

	// Keep track of the last time `callback` was executed.
	var lastExec = 0;

	// `noTrailing` defaults to falsy.
	if ( typeof noTrailing !== 'boolean' ) {
		debounceMode = callback;
		callback = noTrailing;
		noTrailing = undefined;
	}

	// The `wrapper` function encapsulates all of the throttling / debouncing
	// functionality and when executed will limit the rate at which `callback`
	// is executed.
	function wrapper () {

		var self = this;
		var elapsed = Number(new Date()) - lastExec;
		var args = arguments;

		// Execute `callback` and update the `lastExec` timestamp.
		function exec () {
			lastExec = Number(new Date());
			callback.apply(self, args);
		}

		// If `debounceMode` is true (at begin) this is used to clear the flag
		// to allow future `callback` executions.
		function clear () {
			timeoutID = undefined;
		}

		if ( debounceMode && !timeoutID ) {
			// Since `wrapper` is being called for the first time and
			// `debounceMode` is true (at begin), execute `callback`.
			exec();
		}

		// Clear any existing timeout.
		if ( timeoutID ) {
			clearTimeout(timeoutID);
		}

		if ( debounceMode === undefined && elapsed > delay ) {
			// In throttle mode, if `delay` time has been exceeded, execute
			// `callback`.
			exec();

		} else if ( noTrailing !== true ) {
			// In trailing throttle mode, since `delay` time has not been
			// exceeded, schedule `callback` to execute `delay` ms after most
			// recent execution.
			//
			// If `debounceMode` is true (at begin), schedule `clear` to execute
			// after `delay` ms.
			//
			// If `debounceMode` is false (at end), schedule `callback` to
			// execute after `delay` ms.
			timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);
		}

	}

	// Return the wrapper function.
	return wrapper;

};


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  var ctxEl = document.getElementById("activityChart");

  if (!ctxEl) {
    return;
  }

  var ctx = ctxEl.getContext('2d');

  var i = 1;
  var labelsData = [];
  for (i = 1; i <= 30; i++) {
    labelsData.push(i);
  }

  var dataSet = [48, 56, 66, 54, 36, 30, 56, 60, 60, 51, 51, 56];

  var customTooltips = function customTooltips(tooltip) {
    $(this._chart.canvas).css("cursor", "pointer");

    var positionY = this._chart.canvas.offsetTop;
    var positionX = this._chart.canvas.offsetLeft;

    $(".chartjs-tooltip").css({
      opacity: 0
    });

    if (!tooltip || !tooltip.opacity) {
      return;
    }

    if (tooltip.dataPoints.length > 0) {
      tooltip.dataPoints.forEach(function (dataPoint) {
        var content = dataPoint.yLabel;
        var $tooltip = $("#tooltip-" + dataPoint.datasetIndex);

        $tooltip.html(content);
        $tooltip.css({
          opacity: 1,
          top: positionY + dataPoint.y + "px",
          left: positionX + dataPoint.x + "px"
        });
      });
    }
  };

  var activityChart = new Chart(ctx, {
    type: 'bar',
    data: {

      labels: labelsData,

      datasets: [{
        data: dataSet,
        backgroundColor: 'rgba(255, 255, 255, .28)',
        borderColor: 'rgba(255, 255, 255, .5)',
        hoverBackgroundColor: '#fff',
        hoverBorderColor: '#fff',
        borderWidth: 1,
        borderSkipped: 'bottom'
      }]
    },

    options: {
      responsive: true,

      title: {
        display: false
      },

      legend: {
        display: false
      },

      tooltips: {
        enabled: false,
        mode: 'index',
        intersect: false,
        custom: customTooltips
      },

      scales: {

        xAxes: [{
          barThickness: '6',

          barPercentage: '0',

          categoryPercentage: '0',

          gridLines: {
            display: false,
            color: 'rgba(255,255,255,.28)'
          },

          ticks: {
            fontColor: '#fff',
            fontSize: '9',
            fontFamily: 'Open Sans, sans-serif'
          }
        }],

        yAxes: [{
          gridLines: {
            display: false,
            color: '#fff'
          },
          ticks: {
            display: false,
            beginAtZero: true
          }
        }]
      }
    }
  });
});

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /* eslint-disable */
  var checkbox = $('.checkbox'),
      checkboxInline = $('.checkbox-inline');

  if (!checkbox && !checkboxInline) {
    return;
  }

  checkbox.each(function () {
    var box = $('<span class="checkbox-box"></span>');

    if ($(this).find($('.checkbox-box')).length) {
      return;
    }

    $(this).find('label').append(box);
  });

  checkboxInline.each(function () {
    var box = $('<span class="checkbox-box"></span>');

    if ($(this).find($('.checkbox-box')).length) {
      return;
    }

    $(this).append(box);
  });
});

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  var circle = $('.circle');
  var lazyCircle = $('.circle-lazy');

  if (!circle.length && !lazyCircle.length) {
    return;
  }

  var inited = false;

  circle.circleProgress({
    fill: '#ffc425',
    emptyFill: '#e1e9ec',
    startAngle: -Math.PI / 2,
    thickness: 10
  }).on('circle-animation-progress', function (event, progress, stepValue) {
    $(this).find('span').text(Math.round(100 * stepValue) + '%');
  });

  lazyCircle.appear({
    force_process: true
  });

  lazyCircle.on('appear', function () {
    if (!inited) {
      lazyCircle.circleProgress({
        fill: '#ffc425',
        emptyFill: '#e1e9ec',
        startAngle: -Math.PI / 2
      }).on('circle-animation-progress', function (event, progress, stepValue) {
        $(this).find('span').text(Math.round(100 * stepValue) + '%');
      });
      inited = true;
    }
  });
});

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable*/

/* harmony default export */ __webpack_exports__["a"] = (function () {
  $('.company-video__controls').click(function () {
    $(this).fadeOut();
    $(this).siblings('.company-video__item')[0].src += '&autoplay=1';
  });
});

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_throttle_debounce__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_throttle_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_throttle_debounce__);


/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  $('.countdown').TimeCircles({
    circle_bg_color: 'rgba(255,255,255,.5)',
    bg_width: 0.65,
    time: {
      Days: {
        color: '#fff'
      },
      Hours: {
        color: '#fff'
      },
      Minutes: {
        color: '#fff',
        text: 'Min'
      },
      Seconds: {
        color: '#fff',
        text: 'Sec'
      }
    },
    fg_width: 0.05
  });

  function countdownRebuild() {
    $('.countdown').TimeCircles().rebuild();
  }

  $(window).on('resize', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_throttle_debounce__["throttle"])(300, countdownRebuild));
});

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable*/

/* harmony default export */ __webpack_exports__["a"] = (function () {
  $(document).on('click', '.js-card-more', function () {
    $(this).parents('.inner-card').addClass('inner-card_expanded');
    $(this).hide();
    $(this).siblings('.js-card-less').show();
  });

  $(document).on('click', '.js-card-less', function () {
    $(this).parents('.inner-card').removeClass('inner-card_expanded');
    $(this).hide();
    $(this).siblings('.js-card-more').show();
  });

  $(document).on('click', '.js-card-buy', function (e) {
    e.preventDefault();
    e.stopPropagation();
    $(this).parents('.inner-card').toggleClass('active');
    $(this).toggleClass('active');
    $(this).siblings('.js-card-buy-target').toggle();
  });
});

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_load_google_maps_api__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_load_google_maps_api___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_load_google_maps_api__);


/*eslint-disable*/
/* harmony default export */ __webpack_exports__["a"] = (function () {

  if (!$('.map').length) {
    return;
  }

  __WEBPACK_IMPORTED_MODULE_0_load_google_maps_api___default()({ key: 'AIzaSyAhTmgtMtEDorDsQwyrkrLPjAie8g7IV34' }).then(function (googleMaps) {
    function initSmallMap() {
      var mapElement = document.getElementById('map');
      if (!mapElement) {
        return;
      }

      var centerMark = {
        lat: 25.793240,
        lng: -80.351103
      };

      var options = {
        zoom: 17,
        center: centerMark,
        scrollwheel: false
      };

      var mapFrame = new google.maps.Map(mapElement, options);

      var marker = new google.maps.Marker({
        position: centerMark,
        map: mapFrame
      });

      if (document.getElementById('map-2')) {
        var mapSecond = new google.maps.Map(document.getElementById('map-2'), options);
        var markerSecond = new google.maps.Marker({
          position: centerMark,
          map: mapSecond
        });
        var mapThird = new google.maps.Map(document.getElementById('map-3'), options);
        var markerThird = new google.maps.Marker({
          position: centerMark,
          map: mapThird
        });
        var mapFourth = new google.maps.Map(document.getElementById('map-4'), options);
        var markerFourth = new google.maps.Marker({
          position: centerMark,
          map: mapFourth
        });
      }
    }

    initSmallMap();

    function initBranchMap() {
      var mapBranchElement = document.getElementById('map-branch');
      if (!mapBranchElement) {
        return;
      }
      var branchCenter = {
        lat: 48.7297424,
        lng: 5.8553172
      };
      var mapBranch = new google.maps.Map(mapBranchElement, {
        zoom: 7,
        center: branchCenter,
        scrollwheel: false
      });
      var image = {
        url: 'assets/images/icon/figure.png'
      };
      // eslint-disable-next-line
      var luxemburg = new google.maps.Marker({
        position: {
          lat: 49.6075838,
          lng: 6.0658304
        },
        icon: image,
        map: mapBranch
      });
      // eslint-disable-next-line
      var troyes = new google.maps.Marker({
        position: {
          lat: 48.2955989,
          lng: 4.0845315
        },
        icon: image,
        map: mapBranch
      });
      // eslint-disable-next-line
      var karlsruhe = new google.maps.Marker({
        position: {
          lat: 49.0054691,
          lng: 8.4050689
        },
        icon: image,
        map: mapBranch
      });
    }

    initBranchMap();

    $('a[href="#branch"]').click(function () {
      setTimeout(function () {
        initBranchMap();
      }, 200);
    });

    function initJobMap() {
      var mapJobElement = document.getElementById('map-job');
      if (!mapJobElement) {
        return;
      }
      var jobCenter = {
        lat: 47.8111474,
        lng: 13.0503576
      };
      var mapJob = new google.maps.Map(mapJobElement, {
        zoom: 8,
        center: jobCenter,
        scrollwheel: false
      });
      var image = {
        url: 'assets/images/icon/figure.png'
      };
      // eslint-disable-next-line
      var marker = new google.maps.Marker({
        position: jobCenter,
        map: mapJob,
        icon: image
      });
    }

    initJobMap();
  }).catch(function (f) {
    return f;
  });
});

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/

  var radio = $('.radio'),
      radioInline = $('.radio-inline');

  if (!radio && !radioInline) {
    return;
  }

  radio.each(function () {
    var box = $('<span class="radio-box"></span>');

    if ($(this).find($('.radio-box')).length) {
      return;
    }

    $(this).find('label').append(box);
  });

  radioInline.each(function () {
    var box = $('<span class="radio-box"></span>');

    if ($(this).find($('.radio-box')).length) {
      return;
    }

    $(this).append(box);
  });
});

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  var $selector = $('input[type="range"]');

  if (!$selector.length) {
    return;
  }

  $selector.rangeslider({
    polyfill: false,
    rangeClass: 'rangeslider',
    disabledClass: 'rangeslider_disabled',
    horizontalClass: 'rangeslider_horizontal',
    verticalClass: 'rangeslider_vertical',
    fillClass: 'rangeslider__fill',
    handleClass: 'rangeslider__handle'
  });

  function valueOutput() {
    var value = $(this).val();
    var output = $(this).parents('.rangeslider-wrap').find('.rangeslider-wrap__output');
    if (output.length) {
      output.html(value + '%');
    }

    var outputSalary = $(this).parents('.rangeslider-wrap').find('.rangeslider-wrap__output-salary');
    if (outputSalary.length) {
      outputSalary.html(value + ' $/h');
    }

    var outputCustom = $(this).parents('.rangeslider-wrap').find('.rangeslider-wrap__output-custom');
    if (outputCustom.length) {
      outputCustom.html(value);
      var handlerPosition = outputCustom.siblings('.rangeslider').find('.rangeslider__handle').css('left');
      outputCustom.css('left', handlerPosition);
    }
  }

  $selector.each(valueOutput);

  $(document).on('input', 'input[type="range"]', valueOutput);
});

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable*/
/* harmony default export */ __webpack_exports__["a"] = (function () {

  var select = $('.js-select');
  var select2 = $('.js-select2');

  if (!select.length && !select2.length) {
    return;
  }

  Selectize.define('readOnly', function (options) {
    var self = this;

    this.setup_original = this.setup;

    this.setup = function () {
      self.setup_original();
      this.$control_input.prop("disabled", "true");
      this.$control_input.prop("readonly", "true");
    };
  });

  select.selectize({
    plugins: ['readOnly'],
    readOnly: true
  });

  select2.selectize();
});

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  $(document).on('click', '[data-side]', function (e) {
    e.preventDefault();
    var target = $(this).attr('data-side');
    $(target).addClass('active');
    $(target).find('.side-modal__toggler').addClass('active');
  });

  $(document).on('click', '.side-modal__toggler', function () {
    $(this).toggleClass('active');
    $(this).parents('.side-modal').toggleClass('active');
  });
});

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_throttle_debounce__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_throttle_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_throttle_debounce__);

/*eslint-disable*/
/* harmony default export */ __webpack_exports__["a"] = (function () {
  var el = $('.js-sidebar');

  var stickyInit = function stickyInit() {

    if ($(window).width() < 1280 || !el.length) {
      el.trigger('sticky_kit:detach');
      return;
    }

    // el.trigger('sticky_kit:detach');
    el.stick_in_parent({
      offset_top: 100,
      parent: '.row'
    });
  };

  stickyInit();
  $(window).resize(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_throttle_debounce__["debounce"])(200, false, stickyInit));

  var scrollSpyInit = function scrollSpyInit() {
    // Cache selectors
    var topMenu = $(".sidebar-menu");
    if (!topMenu.length) {
      return;
    }

    var lastId,
        topMenuHeight = topMenu.outerHeight(),

    // All list items
    menuItems = topMenu.find("a"),

    // Anchors corresponding to menu items
    scrollItems = menuItems.map(function () {
      var item = $($(this).attr("href"));
      if (item.length) {
        return item;
      }
    });

    // Bind click handler to menu items
    // so we can get a fancy scroll animation
    menuItems.click(function (e) {
      var href = $(this).attr("href"),
          offsetTop = href === "#" ? 0 : $(window).width() > 1280 ? $(href).offset().top - 100 : $(href).offset().top - 57;
      $('html, body').stop().animate({
        scrollTop: offsetTop
      }, 500);
      e.preventDefault();
    });

    // Bind to scroll
    $(window).scroll(function () {
      // Get container scroll position
      var fromTop = $(this).scrollTop() + topMenuHeight;

      // Get id of current scroll item
      var cur = scrollItems.map(function () {
        if ($(this).offset().top < fromTop) return this;
      });
      // Get the id of the current element
      cur = cur[cur.length - 1];
      var id = cur && cur.length ? cur[0].id : "";

      if (lastId !== id) {
        lastId = id;
        // Set/remove active class
        menuItems.parent().removeClass("active").end().filter("[href='#" + id + "']").parent().addClass("active");
      }
    });
  };

  scrollSpyInit();
  // $(window).resize(debounce(300, false, scrollSpyInit));

  $(document).on('click', '.sidebar-menu__item', function () {
    if ($(window).width() < 1280) {
      $('.sidebar-wrap, .header__burger').removeClass('active');
    }
  });
});

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable */
/* harmony default export */ __webpack_exports__["a"] = (function () {
  $(document).on('click', '.switch__item', function () {
    $(this).siblings('.switch__item').removeClass('active');
    $(this).addClass('active');
    $(this).siblings('input').val($(this).find('.switch__text').text());
  });
});

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  var btnClass = '.to-top',
      w = $(window);

  w.on('scroll', function () {
    if (w.scrollTop() - w.innerHeight() > 0) {
      $(btnClass).addClass('active');
    } else {
      $(btnClass).removeClass('active');
    }
  });

  $(document).on('click', btnClass, function (e) {
    e.preventDefault();

    $('html, body').animate({
      scrollTop: 0
    }, 600, 'swing');
  });
});

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/

  $(document).on('click', '.upload', function (e) {
    // eslint-disable-line func-names
    if ($(e.target).hasClass('upload__input')) {
      return;
    }

    e.preventDefault();
    e.stopPropagation();

    $(this).find('.upload__input').trigger('click');
  });
});

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  var $ = window.$;
  var w = $(window);
  var header = $('.affi-header__fixed');

  if (!header.length) {
    return;
  }

  w.on('scroll', function () {
    if (w.scrollTop() > 51) {
      header.addClass('active');
    } else {
      header.removeClass('active');
    }
  });
});

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_throttle_debounce__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_throttle_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_throttle_debounce__);


/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/

  function swipeInit() {
    $(".aside-filter__toggler").swipe({
      swipeStatus: function swipeStatus(event, phase, direction, distance, duration, fingers, fingerData, currentDirection) {
        var sidebar = $(this).parent();

        if (direction === 'right') {
          sidebar.addClass('opened');
        }

        if (direction === 'left') {
          sidebar.removeClass('opened');
        }
      },
      threshold: 50,
      fingers: 'all'
    });
  }

  swipeInit();

  $(window).on('resize', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_throttle_debounce__["debounce"])('250', swipeInit));
});

/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  $(document).on('click', '.header__burger', function (e) {
    e.preventDefault();
    if ($('.header__nav-mobile').hasClass('active')) {
      $('.header__nav-mobile').removeClass('active');
    }
    $(this).toggleClass('active');
    $('.sidebar-wrap').toggleClass('active');
  });

  $(document).on('click', '.header__user-menu', function (e) {
    e.preventDefault();
    if ($('.header__burger').hasClass('active')) {
      $('.sidebar-wrap').removeClass('active');
      $('.header__burger').removeClass('active');
    }
    $('.header__nav-mobile').toggleClass('active');
  });
});

/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  // eslint-disable-next-line
  var heroSlider = new Swiper('.hero-slider', {
    nextButton: '.slider__control_next',
    prevButton: '.slider__control_prev',
    slidesPerView: 4,
    spaceBetween: 35,
    breakpoints: {
      1280: {
        slidesPerView: 3,
        spaceBetween: 40
      },
      1024: {
        slidesPerView: 2,
        spaceBetween: 60
      },
      640: {
        slidesPerView: 1
      }
    }
  });
});

/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable*/
/* harmony default export */ __webpack_exports__["a"] = (function () {

  $(document).on('click', '.inner-header__col_dropdown', function () {
    $(this).siblings($(this)).removeClass('active');
    $(this).parents('.inner-header').find('.inner-header__search').removeClass('active');
    $(this).toggleClass('active');
  });

  $(document).on('click', '.inner-header__search-btn', function () {
    $(this).siblings('.inner-header__search').toggleClass('active');
  });

  $(document).on('click', '.inner-header__burger', function () {
    $('.inner-header__burger').toggleClass('active');
    if ($('.inner-sidebar').length) {
      $('.inner-sidebar').toggleClass('active');
    }
  });
});

/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  $(document).on('input', '.messages__input-area', function () {
    if (!$(this).text().length) {
      $(this).siblings('.messages__placeholder').fadeIn();
    } else {
      $(this).siblings('.messages__placeholder').fadeOut();
    }
  });
});

/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  // eslint-disable-next-line
  var newsSlider = new Swiper('.news-slider', {
    nextButton: '.slider__control_next',
    prevButton: '.slider__control_prev',
    slidesPerView: 3,
    spaceBetween: 30,
    breakpoints: {
      1280: {
        slidesPerView: 2
      },
      1024: {
        slidesPerView: 1
      }
    }
  });
});

/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  var $ = window.$;

  $(document).on('click', '.js-video-play', function (e) {
    e.preventDefault();

    var placeholder = $(this).siblings('.js-video-placeholder');

    $(this).fadeOut();

    var video = placeholder.find('video');
    var iframe = placeholder.find('iframe');

    if (video.length) {
      video[0].play();
    } else if (iframe.length) {
      iframe[0].src += '?autoplay=1';
    } else {
      console.log("Can't find video in placeholder");
    }
  });
});

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  var map = $('.job-listing__map');
  if (!map.length) {
    return;
  }

  function toggleMap() {
    if ($(window).width() < 1600) {
      map.removeClass('active');
      map.find('.side-modal__toggler').removeClass('active');
    } else {
      map.addClass('active');
      map.find('.side-modal__toggler').addClass('active');
    }
  }

  $(window).on('resize', toggleMap);
});

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  $(document).on('click', '.js-pick', function () {
    $('.page__overlay').fadeIn();
    $('.inner-card').addClass('inner-card_pick');
  });

  $(document).on('click', '.js-pick-dismiss', function () {
    $('.page__overlay').fadeOut();
    $('.side-modal, .side-modal__toggler').removeClass('active');
    $('.inner-card').removeClass('inner-card_pick');
  });
});

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  $(document).on('click', '.js-vacancy', function (e) {
    e.preventDefault();
    $('.page__overlay').fadeIn();
  });

  $(document).on('click', '.js-vacancy-close', function (e) {
    e.preventDefault();
    $('.page__overlay').fadeOut();
  });
});

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_throttle_debounce__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_throttle_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_throttle_debounce__);
/*eslint-disable*/

/* harmony default export */ __webpack_exports__["a"] = (function () {
  // txt is the text to measure, font is the full CSS font declaration,
  // e.g. "bold 12px Verdana"
  function measureText(txt, font) {
    var id = 'text-width-tester',
        $tag = $('#' + id);
    if (!$tag.length) {
      $tag = $('<span id="' + id + '" style="display:none;font:' + font + ';">' + txt + '</span>');
      $('body').append($tag);
    } else {
      $tag.css({
        font: font
      }).html(txt);
    }
    return {
      width: $tag.width(),
      height: $tag.height()
    };
  }

  window.shrinkToFill = function () {
    var input = $('.responsive-font');

    if (!input.length) {
      return;
    }

    var fontSize = 53,
        fontWeight = 100,
        fontFamily = 'Museo Sans, sans-serif';
    input.each(function () {
      var $input = $(this),
          txt = $input.val() || $input.text(),
          maxWidth = $input.parent().width(),
          // add some padding
      font = fontWeight + " " + fontSize + "px " + fontFamily;
      // see how big the text is at the default size
      var textWidth = measureText(txt, font).width;
      if (textWidth > maxWidth) {
        // if it's too big, calculate a new font size
        // the extra .9 here makes up for some over-measures
        fontSize = fontSize * maxWidth / textWidth;
        font = fontWeight + " " + fontSize + "px " + fontFamily;
        // and set the style on the input
        $input.css({
          font: font
        });
      } else {
        // in case the font size has been set small and
        // the text was then deleted
        $input.css({
          font: font
        });
      }
    });
  };

  shrinkToFill();

  $(document).on('input', '.responsive-font', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_throttle_debounce__["throttle"])(150, shrinkToFill));
});

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable*/
/* harmony default export */ __webpack_exports__["a"] = (function () {
  var grid = $('.isotope');
  var mobileFilterClass = '.js-case-filter-mobile';
  var filterClass = '.js-case-filter';

  if (!grid.length) {
    return;
  }

  grid.isotope({
    itemSelector: '.isotope-item',
    layoutMode: 'masonry'
  });

  $(document).on('change', mobileFilterClass, function () {
    grid.isotope({
      filter: $(mobileFilterClass).val()
    });
  });

  $(document).on('click', filterClass, function () {
    $(filterClass).removeClass('active');
    $(this).addClass('active');

    grid.isotope({
      filter: $(this).attr('data-filter')
    });
  });
});

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  $('.popup-link').magnificPopup({
    type: 'image'
  });
});

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/

  $('.js-pdf').each(function () {
    var relativePath = '/' + $(this).attr('href');
    var fullPath = 'https://docs.google.com/gview?url=' + window.location.hostname + relativePath + '&embedded=true';

    $(this).attr('href', fullPath);
  });
});

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable*/
/* harmony default export */ __webpack_exports__["a"] = (function () {

  if (!$('.sr-animate').length) {
    return;
  }

  window.sr = ScrollReveal({
    distance: '55px',
    viewFactor: 0.5
  });

  sr.reveal('.sr-animate');

  var mockup1 = {
    delay: 100,
    distance: '-400px',
    easing: 'cubic-bezier(0.3, 0.5, 0.1, 1)',
    scale: 1,
    mobile: true,
    duration: 1000,
    viewFactor: 0.1
  };
  var mockup2 = {
    delay: 400,
    distance: '-400px',
    easing: 'cubic-bezier(0.3, 0.5, 0.1, 1)',
    scale: 1,
    mobile: true,
    duration: 1000,
    viewFactor: 0.1
  };
  var mockup3 = {
    delay: 600,
    distance: '-400px',
    easing: 'cubic-bezier(0.3, 0.5, 0.1, 1)',
    scale: 1,
    mobile: true,
    duration: 1000,
    viewFactor: 0.1
  };
  var mockup4 = {
    delay: 800,
    distance: '-400px',
    easing: 'cubic-bezier(0.3, 0.5, 0.1, 1)',
    scale: 1,
    mobile: true,
    duration: 1000,
    viewFactor: 0.1
  };
  var mockup5 = {
    delay: 1000,
    distance: '-400px',
    easing: 'cubic-bezier(0.3, 0.5, 0.1, 1)',
    scale: 1,
    mobile: true,
    duration: 1000,
    viewFactor: 0.1
  };
  var animateLeft = {
    origin: 'left',
    distance: '50px',
    viewFactor: 0.2,
    duration: 1000
  };

  sr.reveal('.mockup-1', mockup1);
  sr.reveal('.mockup-2', mockup2);
  sr.reveal('.mockup-3', mockup3);
  sr.reveal('.mockup-4', mockup4);
  sr.reveal('.mockup-5', mockup5);
  sr.reveal('.sr-animate-left', animateLeft);
});

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function () {
  /*eslint-disable*/
  $('[data-toggle="tooltip"]').tooltip();
});

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__blocks_rangeslider_rangeslider__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__blocks_switch_switch__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_plates_video_play__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_isotope__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__blocks_sidebar_menu_sidebar_menu__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_scrollreveal__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__blocks_upload_upload__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__blocks_inner_card_inner_card__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__blocks_company_video_company_video__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__blocks_map_map__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_inner_header_inner_header__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__blocks_select_select__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_news_slider_news_slider__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_hero_slider_hero_slider__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__common_fitText__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_header_header__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__blocks_to_top_to_top__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__blocks_activity_chart_activity_chart__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_messages_messages__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__blocks_checkbox_checkbox__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__blocks_radio_radio__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__blocks_side_modal_side_modal__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__pages_job_listing_job_listing__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__pages_shortlist_shortlist__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_suggested_jobs_suggested_jobs__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__common_magnificPopup__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__common_tooltip__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__common_pdf__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__blocks_countdown_countdown__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__blocks_circle_circle__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__components_affi_header_affi_header__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__components_aside_filter_aside_filter__ = __webpack_require__(18);

































/* eslint-disable*/
$(function () {
  objectFitImages();
  svg4everybody();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_15__components_header_header__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_16__blocks_to_top_to_top__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__blocks_rangeslider_rangeslider__["a" /* default */])();
  window.initRangeSlider = __WEBPACK_IMPORTED_MODULE_0__blocks_rangeslider_rangeslider__["a" /* default */];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__blocks_switch_switch__["a" /* default */])();
  window.initSwitch = __WEBPACK_IMPORTED_MODULE_1__blocks_switch_switch__["a" /* default */];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__components_plates_video_play__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_isotope__["a" /* default */])();
  window.initIsotope = __WEBPACK_IMPORTED_MODULE_3__common_isotope__["a" /* default */];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__blocks_sidebar_menu_sidebar_menu__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__common_scrollreveal__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__blocks_upload_upload__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__blocks_inner_card_inner_card__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__blocks_company_video_company_video__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__blocks_map_map__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10__components_inner_header_inner_header__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_11__blocks_select_select__["a" /* default */])();
  window.initSelect = __WEBPACK_IMPORTED_MODULE_11__blocks_select_select__["a" /* default */];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__components_news_slider_news_slider__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13__components_hero_slider_hero_slider__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_14__common_fitText__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_17__blocks_activity_chart_activity_chart__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_18__components_messages_messages__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_19__blocks_checkbox_checkbox__["a" /* default */])();
  window.checkboxInit = __WEBPACK_IMPORTED_MODULE_19__blocks_checkbox_checkbox__["a" /* default */];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_20__blocks_radio_radio__["a" /* default */])();
  window.radioInit = __WEBPACK_IMPORTED_MODULE_20__blocks_radio_radio__["a" /* default */];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_21__blocks_side_modal_side_modal__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_22__pages_job_listing_job_listing__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_23__pages_shortlist_shortlist__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_24__pages_suggested_jobs_suggested_jobs__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_25__common_magnificPopup__["a" /* default */])();
  window.initPopup = __WEBPACK_IMPORTED_MODULE_25__common_magnificPopup__["a" /* default */];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_26__common_tooltip__["a" /* default */])();
  window.initTooltip = __WEBPACK_IMPORTED_MODULE_26__common_tooltip__["a" /* default */];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_28__blocks_countdown_countdown__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_29__blocks_circle_circle__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_27__common_pdf__["a" /* default */])();
  window.initPdf = __WEBPACK_IMPORTED_MODULE_27__common_pdf__["a" /* default */];
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_30__components_affi_header_affi_header__["a" /* default */])();
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_31__components_aside_filter_aside_filter__["a" /* default */])();
});

/***/ }),
/* 35 */
/***/ (function(module, exports) {

var CALLBACK_NAME = '__googleMapsApiOnLoadCallback'

var OPTIONS_KEYS = ['client', 'key', 'language', 'region', 'v']

module.exports = function(options) {
  options = options || {}

  return new Promise(function(resolve, reject) {
    // Exit if not running inside a browser.
    if (typeof window === 'undefined') {
      return reject(
        new Error('Can only load the Google Maps API in the browser')
      )
    }

    // Reject the promise after a timeout.
    var timeoutId = setTimeout(function() {
      window[CALLBACK_NAME] = function() {} // Set the on load callback to a no-op.
      reject(new Error('Could not load the Google Maps API'))
    }, options.timeout || 10000)

    // Hook up the on load callback.
    window[CALLBACK_NAME] = function() {
      if (timeoutId !== null) {
        clearTimeout(timeoutId)
      }
      resolve(window.google.maps)
      delete window[CALLBACK_NAME]
    }

    // Prepare the `script` tag to be inserted into the page.
    var scriptElement = document.createElement('script')
    var params = ['callback=' + CALLBACK_NAME]
    OPTIONS_KEYS.forEach(function(key) {
      if (options[key]) {
        params.push(key + '=' + options[key])
      }
    })
    if (options.libraries && options.libraries.length) {
      params.push('libraries=' + options.libraries.join(','))
    }
    scriptElement.src =
      'https://maps.googleapis.com/maps/api/js?' + params.join('&')

    // Insert the `script` tag.
    document.body.appendChild(scriptElement)
  })
}


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable no-undefined */

var throttle = __webpack_require__(1);

/**
 * Debounce execution of a function. Debouncing, unlike throttling,
 * guarantees that a function is only executed a single time, either at the
 * very beginning of a series of calls, or at the very end.
 *
 * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
 * @param  {Boolean}  atBegin       Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds
 *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.
 *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).
 * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
 *                                  to `callback` when the debounced-function is executed.
 *
 * @return {Function} A new, debounced function.
 */
module.exports = function ( delay, atBegin, callback ) {
	return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);
};


/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,